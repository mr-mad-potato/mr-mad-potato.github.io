{"meta":{"title":"疯土豆先生的博客","subtitle":"世界上只有一种真正的英雄主义，那就是在认清生活的真相后依然热爱生活。——罗曼·罗兰","description":"欢迎来到我的博客！这里有我的技术文章，学习笔记，还有一些我的文学作品。","author":"Mr.Mad Potato","url":"http://mr-mad-potato.site","root":"/"},"pages":[],"posts":[{"title":"博客工作流优化","slug":"博客工作流优化","date":"2024-12-31T09:40:10.000Z","updated":"2024-12-31T18:30:10.393Z","comments":true,"path":"2024/12/31/博客工作流优化/","permalink":"http://mr-mad-potato.site/2024/12/31/%E5%8D%9A%E5%AE%A2%E5%B7%A5%E4%BD%9C%E6%B5%81%E4%BC%98%E5%8C%96/","excerpt":"","text":"前言转眼间博客也写了一年多了，这期间学习到了很多，有很多细节性的问题，如文章TOC边栏只显示二级标题及以下，之前都没注意到文章的front-matter，前不久才注意到它影响了标签，而且它还有其他许多功能。但还是有很多问题没有解决，如网站首页顶部导航栏的四个按钮都不管用，点击都显示404，评论系统没有建立好，网站加载速度太慢等等，以后一一解决。 目的目的如标题所说，很明确，就是优化工作流。原因就是我一直感觉我现在的工作流很不方便。目前我的工作流如下：Git Bash新建推文-&gt;Typora编辑-&gt;Hexo发布到Github-&gt;打开网页查看现在但是编辑过程比较繁琐，特别是图片的上传曾困扰了我很久。我的Typora还不支持多开（别问我为什么），所以我决定将所有工作集成到Obsidian中，并看看有什么办法可以加快访加载速度。 这一段话写于2024.12.31，该文章将持续更新","categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://mr-mad-potato.site/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"使用树枝制作木棍方法简论","slug":"使用树枝制作木棍方法简论","date":"2024-12-31T08:35:47.000Z","updated":"2024-12-31T18:26:49.924Z","comments":true,"path":"2024/12/31/使用树枝制作木棍方法简论/","permalink":"http://mr-mad-potato.site/2024/12/31/%E4%BD%BF%E7%94%A8%E6%A0%91%E6%9E%9D%E5%88%B6%E4%BD%9C%E6%9C%A8%E6%A3%8D%E6%96%B9%E6%B3%95%E7%AE%80%E8%AE%BA/","excerpt":"","text":"摘要本文阐述了一种使用树枝制作木棍的方法。测试的树枝种类有女贞、香樟、石榴树和法国梧桐。该方法具有一定普遍性，具有适应多种树种的潜力。关键词：木棍制作，多树种 本文插图均为女贞 方法简介首先是树枝的挑选，其次是树枝的获得，再者是得到之后的预处理。接下来是树枝的正式处理和日常盘木棍的注意事项。重点是开裂的防止。 树枝开裂原因树枝开裂的最根本原因是因为内应力过大导致某处不堪承受而开裂。内应力的来源如下图所示。当树枝从树干脱离后，内部的水分就开始蒸发。树枝由细胞组成，随着水分的流失，细胞体积会缩小，而由于最外层的细胞与空气接触面积大，水分流失快，体积缩小的素速度比里层细胞快，从而相互之间拉扯，产生内应力。随着水分的流失，内应力加大，最终导致开裂，由于应力方向是沿着径向的切向方向，裂纹的通常是沿着树枝的轴向开裂。而径向和轴向不是封闭的图形，所以理论上不会产生应力。木质部和髓部的水分流失速度也不一样，但由于髓部质地较软，所以应力较小。 此为裂纹原理图 此为典型裂纹照片 树枝的挑选树枝的挑选讲究天时地利人和。首先是天气。天气以晴天为宜，阴天、雨天和雪天会导致树枝中水分过多，取下后水分流失的速度差异大，会增加开裂的可能性。其次是树枝的挑选，粗细长度可以根据自己的喜好，但切忌新生树枝和即将脱落，没有树叶的树枝。新生树枝水分含量大，质地软，容易开裂。老树枝质地脆，质量轻树皮不易剥离。树枝最好用锯子锯下来，这样裂纹最少，方便之后的预处理，同时会提高数值整体的利用率以及成品率。 此为根部开裂 树枝的预处理锯下来得到的树枝可能还带有许多树叶和分枝，尾端可能有毛刺或裂纹，预处理的重点就是处理尾部，将其削至一个合理的形状。最重要的是将裂纹完全削除，尾端削平整。分枝切忌从根部折断，一定要预留一段距离，切口保持平整。最后树皮一定要保留完整，这对防止树枝开裂有着至关重要的作用。切口不平整会导致受力不均，极易容易开裂。而有裂痕不完全切除的话会导致裂纹随着水分的流失而扩大。树皮的作用则是减慢外层水分的流失速度，这一点是树皮的天然性质，里外流失水分速度一致则可以让体积均匀的缩小，不会开裂。最后处理完的树枝应存放于一个不受太阳直射的，没有那么干燥的地方，这些条件都是为了防止外层水分流失速度过快。 还是裂纹 树枝的进一步处理待阴干一段时间，一般为一两天即可，时间过长会导致树皮较难剥下。观察树枝切口处颜色若泛白则说明水分基本蒸发完毕。对于女贞这个树种来说树皮可以较为方便的剥去，且剥皮后木棍质地顺滑。对于其他树种来讲若树皮不易剥离，需要用到刀削的时候务必确保树枝干透。将女贞剥皮后首先对头部尾部进行倒角，倒角要尽量圆润且不宜太大。分枝处亦是如此。处理完毕后可进行第一次上油，油的种类没有测试过太多，生物有植物油均可，不必涂抹太多。至此处理完毕。树枝蜕变成为木棍。 此为分枝处裂纹 还是裂纹 日常保养正常把玩即可，一般不会出现问题。木棍色泽会随着时间氧化变黄，越加有光泽。","categories":[],"tags":[{"name":"木棍 杂谈","slug":"木棍-杂谈","permalink":"http://mr-mad-potato.site/tags/%E6%9C%A8%E6%A3%8D-%E6%9D%82%E8%B0%88/"}]},{"title":"内存杂谈","slug":"内存杂谈","date":"2024-12-14T15:26:41.000Z","updated":"2024-12-14T16:07:23.516Z","comments":true,"path":"2024/12/14/内存杂谈/","permalink":"http://mr-mad-potato.site/2024/12/14/%E5%86%85%E5%AD%98%E6%9D%82%E8%B0%88/","excerpt":"","text":"关于内存清理软件下载这些软件起初是因为内存老是爆满，总是想清理。同时在使用CAD软件（如SOLIDWORKS）时软件经常会提示内存不够，于是上网搜集了这些软件。但是使用体验却很不佳，内存该满还是满。我又上网寻求答案，看了几个讲解操作系统管理内存原理的视频，发现内存管理一个悠久且困难的问题。常见的内存清理软件可以说是几乎没用。这之后我就卸载了这些软件，但是心中看着快满的内存还是略微难受，直到一天我看到了一句话让我彻底改变了我的想法。 Free RAM is wasted RAMp.s. 那个视频好像是epcdiy的，不过我在他对线何同学之前就关注他了，好像就是因为这个视频，不过我是这段时间整理软件时才写的这个，什么时候关注的我也不太确定。 写于2024&#x2F;12&#x2F;10","categories":[],"tags":[{"name":"计算机","slug":"计算机","permalink":"http://mr-mad-potato.site/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"}]},{"title":"蒙提霍尔悖论","slug":"蒙提霍尔悖论","date":"2024-08-12T11:39:36.000Z","updated":"2024-12-31T09:48:14.273Z","comments":true,"path":"2024/08/12/蒙提霍尔悖论/","permalink":"http://mr-mad-potato.site/2024/08/12/%E8%92%99%E6%8F%90%E9%9C%8D%E5%B0%94%E6%82%96%E8%AE%BA/","excerpt":"","text":"​ 前几天刷视频看见了这个，虽然这个是个“悖论”，但这个其实是个概率问题，只是有点让人难以理解罢了。刚开始我也有点被迷惑了，于是决定拾起丢下多年的C语言，编写了一个小程序，或不多说，代码见下。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859```#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;time.h&gt;int main ()&#123; srand(time(0)); int door1=0; int door2=1;/*这里直接指定了哪扇门后有奖品,而不是再使用一次随机分配那扇门后有奖品， 因为在不知道门后有什么的前提下抽到奖品的概率是一样的*/ int door3=0; int win=1; int fstt=0;//第一抽抽中计数变量 int scndt=0;//开了一扇门后更改选择再抽抽中计数变量 int hc=0;//开了一扇门后随机决定改变选择 int fstt1=0; int scndt1=0; int hc1=0; int i=1; for(i;i&lt;=100000;i++) &#123; int num= rand() % 3 + 1; int rdm= rand() % 2 + 1;//1为更换选择2为不更换选择 switch (num) &#123; case 1 : win=0; scndt++; if(rdm==1) hc++; break; case 2 : win=1; fstt++; if(rdm==2) hc++; break; case 3 : win=0; scndt++; if(rdm==1) hc++; break; default : break; &#125; //printf(&quot;随机数为:%d\\n&quot;, num); /*if (win==1) &#123; //printf(&quot;恭喜你中奖了！\\n&quot;); fstt=fstt+1; &#125; //else //printf(&quot;可惜了，没中奖~\\n&quot;); */ &#125;fstt1=fstt/1000;scndt1=scndt/1000;hc1=hc/1000; printf(&quot;总的中奖率为：%d%%。\\n&quot;,fstt1); printf(&quot;开了一扇门后直接转换选择后的中奖率为：%d%%。\\n&quot;,scndt1); printf(&quot;开了一扇门后随机转换选择后的中奖率为：%d%%。\\n&quot;,hc1); return 0; &#125;``` 运行结果见下图","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://mr-mad-potato.site/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"Arduino 小项目","slug":"Arduino-小项目","date":"2024-07-09T10:13:26.000Z","updated":"2024-07-09T10:37:34.802Z","comments":true,"path":"2024/07/09/Arduino-小项目/","permalink":"http://mr-mad-potato.site/2024/07/09/Arduino-%E5%B0%8F%E9%A1%B9%E7%9B%AE/","excerpt":"","text":"​ 好长时间没写了，竟然鸽了半年多。。。水一篇。 ​ 之前一直想学习一点电控方面的知识，无奈于较多的竞赛任务和学业以及不合理的时间规划一直没有学习。最近刚考完试有了点闲暇时间刚好手边有块Arduino板子和一块屏，就想着点个屏玩玩。网上一搜还真有各小项目，是个游戏，类似于谷歌的恐龙小游戏。于是我上B站看了十几分钟教程，竟然没有比较新的教程，视频里用的系统竟然还是win7（只是有点老，并没有嫌弃，比win11好 ;-））上官网下载IDE后安装，感觉UI还不错。最后板子一连接自己下载驱动，很省心。照着接线图接线。220欧的电阻找了一会，那个电阻的色环刚开始可能不太好认，别的1602LCD屏有的还接了个电位器用来调整背光，我没找到，该校项目的作者也没接（这哥们画的接线图真的是一言难尽）下载程序还算比较顺利，但是杜邦线和面包板可能接触不太好半天才让显示屏亮。之后可以快乐的玩游戏了，虽然很简单但超级有成就感。 ​ 游戏很好玩。","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://mr-mad-potato.site/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"","slug":"blog-log","date":"2024-01-01T07:15:04.016Z","updated":"2024-01-01T07:12:03.892Z","comments":true,"path":"2024/01/01/blog-log/","permalink":"http://mr-mad-potato.site/2024/01/01/blog-log/","excerpt":"","text":"#博客搭建详细记录 概述 博客搭建使用的是Hexo框架，部署在了Gitee仓库里，使用gitee pages服务。教程是在知乎上看的，具体哪篇忘了，但是相关教程很多，按着步骤一步一步走就可以了。我本想将整个过程详细的记录下来，但发现其实没有必要，所以我就将我遇到的问题写下来，希望能帮到各位。水平能力有限，如有问题还请多多指教。 环境搭建 在我重装完系统配环境时忘记安装了Node.js，我先安装的git，安装完后git不能使用npm，但是过了一会就好了，cmd里也显示不了版本。起初我以为是安装顺序的问题，但我突然想起来安装完后没有重启（我就是电脑没问题就不重启，也没怎么关过机，都是睡眠），应该是环境变量重启之后才有效，重启之后一切正常。 Git for Windows官网很慢，国内镜像站地址CNPM Binaries Mirror (npmmirror.com) 博客搭建 我使用的是hexo框架，主题是volantis，个人比较喜欢这种网站风格的主题，日后也有意搭建个人网站。搭建过程中也遇到了很多问题。我首先遇到的问题是push到gitee后与本地预览不同，我push了很多遍也无济于事，但等到第二天网站就显示正确了。不知道为啥。其次就是主题的个性化。更改yml设置感觉就像普通的手机和PC设置一样，true、false就是开关，css和js代码都是封装好的，还有很多模组，如评论系统就有很多选项。然而在添加图片时我又遇到了问题，CDN好像不起作用imagehub和仓库都试过了，还下载了PicGo。最后我把图片添加到了assets文件夹，但是图片加载速度有些慢，每回都是图片最后加载出来，这也算是个没解决的问题吧。接下来评论系统，我使用的是vssue+gitee，OAuth什么的都设置好了，但是push后老是显示GitHub，甚至一打开网站就跳转到github登录，我以为是API的问题，但是下载之后也无法解决，最后只能先把评论系统关了。最后是计数，计数使用不蒜子。之前一直显示不了，最后改来改去我都忘记改了哪里，但是竟然显示出来了，访问次数也大致正确，看来是每回访问都发送到了不蒜子服务器。同时当我看到localhost访问次数时也是很震惊。 后记 11月1号晚上大半夜叫舍友给我拍用于Gitee Pages服务的实名验证照片，结果等了一两天又变成支付宝实名验证。网站上线时间：11月2号3号吧网站正式发布时间：11月20号","categories":[],"tags":[]},{"title":"my first blog","slug":"my-first-blog","date":"2023-11-01T16:33:43.000Z","updated":"2023-11-01T16:44:50.217Z","comments":true,"path":"2023/11/02/my-first-blog/","permalink":"http://mr-mad-potato.site/2023/11/02/my-first-blog/","excerpt":"","text":"Hello World!终于有个博客了。 大家好，我是疯土豆先生，最近看到我身边的朋友们都有了自己的博客，我很是羡慕。于是在23年11月的第一天晚上我下定决心搞一个。 这是一个使用Hexo框架搭建部署在gitee上的静态博客，之前看到的有买阿里服务器的，看了看感觉不是很划算，本来就发布不了几篇文章，也更不会有太多人访问，于是选择部署在gitee上。之后计划用家里的主机当服务器，搭建一个博客。以后肯定会搭建一个动态博客。 发点什么呢？发点学习笔记，发点随笔，就当朋友圈了。","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"http://mr-mad-potato.site/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"木棍 杂谈","slug":"木棍-杂谈","permalink":"http://mr-mad-potato.site/tags/%E6%9C%A8%E6%A3%8D-%E6%9D%82%E8%B0%88/"},{"name":"计算机","slug":"计算机","permalink":"http://mr-mad-potato.site/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"学习","slug":"学习","permalink":"http://mr-mad-potato.site/tags/%E5%AD%A6%E4%B9%A0/"}]}